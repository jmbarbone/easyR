% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match.R
\name{match_ext}
\alias{match_ext}
\alias{\%out\%}
\alias{\%wo\%}
\alias{\%wi\%}
\alias{no_match}
\alias{any_match}
\title{Value matching - Extensions}
\usage{
x \%out\% table

x \%wo\% table

x \%wi\% table

no_match(x, table)

any_match(x, table)
}
\arguments{
\item{x}{vector or \code{NULL}: the values to be matched.
    \link[base]{Long vectors} are supported.}

\item{table}{vector or \code{NULL}: the values to be matched against.
    \link[base]{Long vectors} are not supported.}
}
\description{
Non matching alternatives and supplementary functions.
}
\details{
Contrast with \code{\link[base:match]{base::match()}}, \code{\link[base:sets]{base::intersect()}}, and \code{\%in\%}
The functions of \verb{\%wi\%} and \verb{\%wo\%} can be used in leiu of \code{intersect()} and
\code{setdiff()}.  The primary difference is that the base functions return only
unique values, which may not be a desired behavior.
}
\examples{
1:10 \%in\% c(1,3,5,9)
1:10 \%out\% c(1,3,5,9)
letters[1:5] \%wo\% letters[3:7]
letters[1:5] \%wi\% letters[3:7]

# base functions only return unique values

          c(1:6,7:2) \%wo\% c(3,7,12)  # -> keeps duplicates
  setdiff(c(1:6,7:2),     c(3,7,12)) # -> unique values

          c(1:6,7:2) \%wi\% c(3,7,12)  # -> keeps duplicates
intersect(c(1:6,7:2),     c(3,7,12)) # -> unique values

}
